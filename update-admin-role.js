/**
 * ‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó role ‡∏Ç‡∏≠‡∏á adminn ‡πÄ‡∏õ‡πá‡∏ô admin
 * 
 * ‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ:
 * 1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ service-account.json ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà
 * 2. ‡∏£‡∏±‡∏ô: node update-admin-role.js
 */

const { google } = require('googleapis');
const fs = require('fs');
const path = require('path');
require('dotenv').config();

const SPREADSHEET_ID = process.env.GOOGLE_SHEET_ID;
const USERS_SHEET = 'Users';

async function updateAdminRole() {
    try {
        console.log('\nüîß ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó role ‡∏Ç‡∏≠‡∏á adminn...\n');
        
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö service account
        const serviceAccountPath = path.join(__dirname, 'service-account.json');
        if (!fs.existsSync(serviceAccountPath)) {
            console.error('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå service-account.json');
            console.log('üí° ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ß‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå service-account.json ‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå kohlarn\n');
            process.exit(1);
        }

        const serviceAccount = JSON.parse(fs.readFileSync(serviceAccountPath, 'utf8'));
        
        const auth = new google.auth.GoogleAuth({
            credentials: serviceAccount,
            scopes: ['https://www.googleapis.com/auth/spreadsheets'],
        });

        const sheets = google.sheets({ version: 'v4', auth });

        // 1. ‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        console.log('üìñ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Users...');
        const response = await sheets.spreadsheets.values.get({
            spreadsheetId: SPREADSHEET_ID,
            range: `${USERS_SHEET}!A2:E`,
        });

        const rows = response.data.values || [];
        console.log(`   ‡∏û‡∏ö ${rows.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n`);

        // 2. ‡∏´‡∏≤ adminn
        let rowIndex = -1;
        let currentData = null;
        
        rows.forEach((row, index) => {
            if (row[0] === 'adminn') {
                rowIndex = index + 2; // +2 ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏≤‡∏Å‡πÅ‡∏ñ‡∏ß 2 ‡πÅ‡∏•‡∏∞ index ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏≤‡∏Å 0
                currentData = {
                    username: row[0],
                    password: row[1],
                    nickname: row[2],
                    role: row[3] || 'user',
                    hotelId: row[4] || ''
                };
            }
        });

        if (rowIndex === -1) {
            console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö username "adminn" ‡πÉ‡∏ô Google Sheets');
            console.log('üí° ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏™‡∏£‡πâ‡∏≤‡∏á user adminn ‡∏Å‡πà‡∏≠‡∏ô ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô username ‡πÉ‡∏ô‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå\n');
            process.exit(1);
        }

        console.log('‚úÖ ‡∏û‡∏ö adminn:');
        console.log('   Username:', currentData.username);
        console.log('   Nickname:', currentData.nickname);
        console.log('   Role (‡πÄ‡∏î‡∏¥‡∏°):', currentData.role);
        console.log('   HotelId:', currentData.hotelId || '(‡∏ß‡πà‡∏≤‡∏á)');
        console.log('');

        // 3. ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó role ‡πÄ‡∏õ‡πá‡∏ô admin
        if (currentData.role === 'admin') {
            console.log('‚úÖ adminn ‡∏°‡∏µ role ‡πÄ‡∏õ‡πá‡∏ô admin ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß!\n');
            process.exit(0);
        }

        console.log('üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó role ‡πÄ‡∏õ‡πá‡∏ô "admin"...');
        
        await sheets.spreadsheets.values.update({
            spreadsheetId: SPREADSHEET_ID,
            range: `${USERS_SHEET}!D${rowIndex}`, // Column D = role
            valueInputOption: 'RAW',
            requestBody: {
                values: [['admin']]
            }
        });

        console.log('‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!\n');
        console.log('‚îÅ'.repeat(50));
        console.log('üìã ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà:');
        console.log('   Username: adminn');
        console.log('   Role: admin ‚úÖ');
        console.log('‚îÅ'.repeat(50));
        console.log('\nüí° ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ï‡πà‡∏≠‡πÑ‡∏õ:');
        console.log('   1. ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö (Ctrl + F5)');
        console.log('   2. ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö');
        console.log('   3. ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà‡∏î‡πâ‡∏ß‡∏¢ adminn');
        console.log('   4. ‡∏Ñ‡∏ß‡∏£‡πÄ‡∏´‡πá‡∏ô‡πÄ‡∏°‡∏ô‡∏π‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î! üéâ\n');

    } catch (error) {
        console.error('\n‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error.message);
        if (error.code === 429) {
            console.log('‚ö†Ô∏è  Google Sheets API quota exceeded');
            console.log('üí° ‡∏£‡∏≠ 60 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ‡πÅ‡∏•‡πâ‡∏ß‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà\n');
        }
        process.exit(1);
    }
}

// ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
updateAdminRole();
